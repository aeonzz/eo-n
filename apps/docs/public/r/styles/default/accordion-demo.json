{
  "name": "accordion-demo",
  "type": "registry:example",
  "registryDependencies": [
    "accordion"
  ],
  "files": [
    {
      "path": "examples/accordion-demo.tsx",
      "content": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/registry/default/ui/accordion\";\n\nexport default function AccordionDemo() {\n  return (\n    <Accordion className=\"mx-auto w-full max-w-md\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern and is fully keyboard\n          navigable. The component is built with proper focus management and\n          ARIA attributes for screen reader compatibility.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. The component comes with default styling using Tailwind CSS\n          classes, but you can easily customize it to match your design system.\n          The animation is handled through CSS transitions for smooth open/close\n          interactions.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Is it responsive?</AccordionTrigger>\n        <AccordionContent>\n          Absolutely. The accordion adapts to different screen sizes and works\n          well on both desktop and mobile devices. The content area smoothly\n          expands and collapses regardless of the amount of content inside.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}