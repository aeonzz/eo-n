{
  "name": "select",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/select.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Select as SelectPrimitive } from \"@base-ui-components/react/select\";\r\nimport {\r\n  Check,\r\n  ChevronDownIcon,\r\n  ChevronsUpDown,\r\n  ChevronUpIcon,\r\n} from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Select({\r\n  alignItemToTrigger = false,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n  return (\r\n    <SelectPrimitive.Root\r\n      data-slot=\"select\"\r\n      alignItemToTrigger={alignItemToTrigger}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface SelectTriggerProps\r\n  extends React.ComponentProps<typeof SelectPrimitive.Trigger> {\r\n  size?: \"sm\" | \"default\";\r\n}\r\n\r\nfunction SelectTrigger({\r\n  className,\r\n  size = \"default\",\r\n  children,\r\n  ...props\r\n}: SelectTriggerProps) {\r\n  return (\r\n    <SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      data-size={size}\r\n      className={cn(\r\n        \"border-input ring-offset-background [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit cursor-pointer items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <SelectPrimitive.Icon>\r\n        <ChevronsUpDown className=\"size-4 opacity-50\" />\r\n      </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n  );\r\n}\r\n\r\nfunction SelectValue({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n  return (\r\n    <SelectPrimitive.Value\r\n      data-slot=\"select-value\"\r\n      className={cn(\"w-full overflow-hidden text-ellipsis\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SelectBackdrop({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Backdrop>) {\r\n  return <SelectPrimitive.Backdrop data-slot=\"select-backdrop\" {...props} />;\r\n}\r\n\r\nfunction SelectPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Portal>) {\r\n  return <SelectPrimitive.Portal data-slot=\"select-portal\" {...props} />;\r\n}\r\n\r\ninterface SelectContentProps\r\n  extends Omit<\r\n    React.ComponentProps<typeof SelectPrimitive.Positioner>,\r\n    \"render\"\r\n  > {}\r\n\r\nfunction SelectContent({\r\n  className,\r\n  sideOffset = 4,\r\n  children,\r\n  ...props\r\n}: SelectContentProps) {\r\n  return (\r\n    <SelectPortal>\r\n      <SelectBackdrop />\r\n      <SelectPrimitive.Positioner\r\n        data-slot=\"select-positioner\"\r\n        sideOffset={sideOffset}\r\n        className=\"relative z-50 size-auto\"\r\n        {...props}\r\n      >\r\n        <SelectPrimitive.ScrollUpArrow\r\n          data-slot=\"select-scroll-up-arrow\"\r\n          className=\"top-0 z-[1] flex w-full cursor-default items-center justify-center py-1\"\r\n        >\r\n          <ChevronUpIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollUpArrow>\r\n        <SelectPrimitive.Popup\r\n          data-slot=\"select-content\"\r\n          className={cn(\r\n            \"bg-popover text-popover-foreground max-h-[var(--available-height)] max-w-[var(--available-width)] w-[var(--anchor-width)] overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md transition-[transform,scale,opacity] duration-150 ease-out\",\r\n            \"origin-[var(--transform-origin)] data-[ending-style]:scale-95 data-[ending-style]:opacity-0 data-[side=none]:data-[ending-style]:scale-100 data-[side=none]:data-[ending-style]:opacity-0 data-[side=none]:data-[ending-style]:transition-none data-[starting-style]:scale-95 data-[starting-style]:opacity-0 data-[side=none]:data-[starting-style]:scale-100 data-[side=none]:data-[starting-style]:opacity-0\",\r\n            className\r\n          )}\r\n        >\r\n          {children}\r\n        </SelectPrimitive.Popup>\r\n        <SelectPrimitive.ScrollDownArrow\r\n          data-slot=\"select-scroll-down-arrow\"\r\n          className=\"bottom-0 z-[1] flex w-full cursor-default items-center justify-center py-1\"\r\n        >\r\n          <ChevronDownIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollDownArrow>\r\n      </SelectPrimitive.Positioner>\r\n    </SelectPortal>\r\n  );\r\n}\r\n\r\nfunction SelectItem({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n  return (\r\n    <SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      className={cn(\r\n        \"data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <SelectPrimitive.ItemIndicator>\r\n          <Check className=\"size-4\" />\r\n        </SelectPrimitive.ItemIndicator>\r\n      </span>\r\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>\r\n  );\r\n}\r\n\r\nfunction SelectGroup({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectGroupLabel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.GroupLabel>) {\r\n  return (\r\n    <SelectPrimitive.Group\r\n      data-slot=\"select-group-label\"\r\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SelectScrollUpArrow({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpArrow>) {\r\n  return (\r\n    <SelectPrimitive.ScrollUpArrow\r\n      data-slot=\"select-scroll-up-arrow\"\r\n      className={cn(\r\n        \"top-0 z-[1] flex w-full cursor-default items-center justify-center py-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ChevronUpIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpArrow>\r\n  );\r\n}\r\n\r\nfunction SelectScrollDownArrow({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpArrow>) {\r\n  return (\r\n    <SelectPrimitive.ScrollUpArrow\r\n      data-slot=\"select-scroll-down-arrow\"\r\n      className={cn(\r\n        \"bottom-0 z-[1] flex w-full cursor-default items-center justify-center py-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ChevronDownIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpArrow>\r\n  );\r\n}\r\n\r\nfunction SelectSeparator({\r\n  className,\r\n  ...props\r\n}: Omit<\r\n  React.ComponentProps<typeof SelectPrimitive.Separator>,\r\n  \"orientation\"\r\n>) {\r\n  return (\r\n    <SelectPrimitive.Separator\r\n      data-slot=\"select-separator\"\r\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Select,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectBackdrop,\r\n  SelectPortal,\r\n  SelectItem,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectGroupLabel,\r\n  SelectSeparator,\r\n  SelectScrollUpArrow,\r\n  SelectScrollDownArrow,\r\n};\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}