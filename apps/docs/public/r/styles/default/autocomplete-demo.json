{
  "name": "autocomplete-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/autocomplete-demo.tsx",
      "content": "import { XIcon } from \"lucide-react\";\r\n\r\nimport {\r\n  Autocomplete,\r\n  AutocompleteClear,\r\n  AutocompleteContent,\r\n  AutocompleteEmpty,\r\n  AutocompleteInput,\r\n  AutocompleteItem,\r\n  AutocompleteList,\r\n} from \"@/registry/default/ui/autocomplete\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\nimport { Label } from \"@/registry/default/ui/label\";\r\n\r\ninterface Tag {\r\n  id: string;\r\n  value: string;\r\n}\r\n\r\nconst tags: Tag[] = [\r\n  { id: \"t1\", value: \"feature\" },\r\n  { id: \"t2\", value: \"fix\" },\r\n  { id: \"t3\", value: \"bug\" },\r\n  { id: \"t4\", value: \"docs\" },\r\n  { id: \"t5\", value: \"internal\" },\r\n  { id: \"t6\", value: \"mobile\" },\r\n  { id: \"c-accordion\", value: \"component: accordion\" },\r\n  { id: \"c-alert-dialog\", value: \"component: alert dialog\" },\r\n  { id: \"c-autocomplete\", value: \"component: autocomplete\" },\r\n  { id: \"c-avatar\", value: \"component: avatar\" },\r\n  { id: \"c-checkbox\", value: \"component: checkbox\" },\r\n  { id: \"c-checkbox-group\", value: \"component: checkbox group\" },\r\n  { id: \"c-collapsible\", value: \"component: collapsible\" },\r\n  { id: \"c-combobox\", value: \"component: combobox\" },\r\n  { id: \"c-context-menu\", value: \"component: context menu\" },\r\n  { id: \"c-dialog\", value: \"component: dialog\" },\r\n  { id: \"c-field\", value: \"component: field\" },\r\n  { id: \"c-fieldset\", value: \"component: fieldset\" },\r\n  { id: \"c-filterable-menu\", value: \"component: filterable menu\" },\r\n  { id: \"c-form\", value: \"component: form\" },\r\n  { id: \"c-input\", value: \"component: input\" },\r\n  { id: \"c-menu\", value: \"component: menu\" },\r\n  { id: \"c-menubar\", value: \"component: menubar\" },\r\n  { id: \"c-meter\", value: \"component: meter\" },\r\n  { id: \"c-navigation-menu\", value: \"component: navigation menu\" },\r\n  { id: \"c-number-field\", value: \"component: number field\" },\r\n  { id: \"c-popover\", value: \"component: popover\" },\r\n  { id: \"c-preview-card\", value: \"component: preview card\" },\r\n  { id: \"c-progress\", value: \"component: progress\" },\r\n  { id: \"c-radio\", value: \"component: radio\" },\r\n  { id: \"c-scroll-area\", value: \"component: scroll area\" },\r\n  { id: \"c-select\", value: \"component: select\" },\r\n  { id: \"c-separator\", value: \"component: separator\" },\r\n  { id: \"c-slider\", value: \"component: slider\" },\r\n  { id: \"c-switch\", value: \"component: switch\" },\r\n  { id: \"c-tabs\", value: \"component: tabs\" },\r\n  { id: \"c-toast\", value: \"component: toast\" },\r\n  { id: \"c-toggle\", value: \"component: toggle\" },\r\n  { id: \"c-toggle-group\", value: \"component: toggle group\" },\r\n  { id: \"c-toolbar\", value: \"component: toolbar\" },\r\n  { id: \"c-tooltip\", value: \"component: tooltip\" },\r\n];\r\n\r\nexport default function AutocompleteDemo() {\r\n  return (\r\n    <Autocomplete items={tags} autoHighlight>\r\n      <AutocompleteInput\r\n        render={(props) => (\r\n          <Label className=\"flex w-full max-w-2xs flex-col gap-2\">\r\n            Search tags\r\n            <div className=\"relative\">\r\n              <Input placeholder=\"e.g. feature\" {...props} />\r\n              <AutocompleteClear\r\n                render={\r\n                  <Button\r\n                    size=\"icon\"\r\n                    variant=\"outline\"\r\n                    className=\"absolute top-[50%] left-[94%] translate-x-[-50%] translate-y-[-50%] [&]:size-5\"\r\n                  >\r\n                    <XIcon className=\"size-3\" />\r\n                  </Button>\r\n                }\r\n              />\r\n            </div>\r\n          </Label>\r\n        )}\r\n      />\r\n      <AutocompleteContent>\r\n        <AutocompleteEmpty>No tags found.</AutocompleteEmpty>\r\n        <AutocompleteList>\r\n          {(tag: Tag) => (\r\n            <AutocompleteItem key={tag.id} value={tag}>\r\n              {tag.value}\r\n            </AutocompleteItem>\r\n          )}\r\n        </AutocompleteList>\r\n      </AutocompleteContent>\r\n    </Autocomplete>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}