{
  "name": "kbd",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/kbd.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport const kbdVariants = cva(\n  \"inline-flex items-center justify-center text-center text-xs font-medium tracking-tight shadow-sm gap-1.5 text-muted-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-accent\",\n        outline: \"bg-background outline outline-border\",\n        ghost: \"bg-transparent shadow-none\",\n      },\n      size: {\n        default: \"h-6 rounded px-1.5\",\n        sm: \"h-5 rounded-sm px-1\",\n        lg: \"h-7 rounded-md px-2\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nconst KEY_DESCRIPTIONS: Record<string, string> = {\n  \"⌘\": \"Command\",\n  \"⇧\": \"Shift\",\n  \"⌥\": \"Option\",\n  \"⌃\": \"Control\",\n  Ctrl: \"Control\",\n  \"⌫\": \"Backspace\",\n  \"⎋\": \"Escape\",\n  \"↩\": \"Return\",\n  \"⇥\": \"Tab\",\n  \"⌤\": \"Enter\",\n  \"↑\": \"Arrow Up\",\n  \"↓\": \"Arrow Down\",\n  \"←\": \"Arrow Left\",\n  \"→\": \"Arrow Right\",\n  \"⇪\": \"Caps Lock\",\n  fn: \"Function\",\n  \"⌦\": \"Delete\",\n  \"⇞\": \"Page Up\",\n  \"⇟\": \"Page Down\",\n  \"↖\": \"Home\",\n  \"↘\": \"End\",\n  \"↕\": \"Page Up/Down\",\n  \"↔\": \"Left/Right\",\n} as const;\n\nexport type KbdVariants = VariantProps<typeof kbdVariants>;\n\ninterface KbdProps extends React.ComponentProps<\"div\">, KbdVariants {\n  asChild?: boolean;\n}\n\nfunction Kbd({ className, variant, size, asChild, ...props }: KbdProps) {\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"kbd\"\n      className={cn(kbdVariants({ className, size, variant }))}\n      {...props}\n    />\n  );\n}\n\ninterface KbdKeyProps extends React.ComponentProps<\"span\"> {\n  asChild?: boolean;\n}\n\nfunction KbdKey({\n  className,\n  asChild,\n  title: titleProp,\n  children,\n  ...props\n}: KbdKeyProps) {\n  const Comp = asChild ? Slot : \"span\";\n  const keyText = children?.toString() ?? \"\";\n  const title = titleProp ?? KEY_DESCRIPTIONS[keyText] ?? keyText;\n  return (\n    <abbr title={title} className=\"no-underline\">\n      <Comp data-slot=\"kbd-key\" className={cn(className)} {...props}>\n        {children}\n      </Comp>\n    </abbr>\n  );\n}\n\ninterface KbdSeparatorProps extends React.ComponentProps<\"span\"> {\n  asChild?: boolean;\n}\n\nfunction KbdSeparator({\n  className,\n  children = \"+\",\n  asChild,\n  ...props\n}: KbdSeparatorProps) {\n  const Comp = asChild ? Slot : \"span\";\n  return (\n    <Comp\n      data-slot=\"kbd-separtor\"\n      className={cn(\"text-muted-foreground\", className)}\n      {...props}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport { Kbd, KbdKey, KbdSeparator };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}