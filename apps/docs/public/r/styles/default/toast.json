{
  "name": "toast",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/toast.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Toast as ToastPrimitive } from \"@base-ui-components/react/toast\";\r\nimport { XIcon } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction useToastManager() {\r\n  return ToastPrimitive.useToastManager();\r\n}\r\n\r\nconst toastManager = ToastPrimitive.createToastManager();\r\n\r\nfunction ToastProvider({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof ToastPrimitive.Provider>) {\r\n  const { toasts } = useToastManager();\r\n  return (\r\n    <ToastPrimitive.Provider data-slot=\"toast-provider\" {...props}>\r\n      <ToastPrimitive.Viewport\r\n        data-slot=\"toast-viewport\"\r\n        className=\"fixed right-8 bottom-8 z-50 w-full max-w-sm p-6 md:w-[420px]\"\r\n      >\r\n        {children}\r\n        {toasts.map((toast) => (\r\n          <Toast key={toast.id} toast={toast}>\r\n            <ToastTitle />\r\n            <ToastDescription />\r\n            <ToastClose />\r\n          </Toast>\r\n        ))}\r\n      </ToastPrimitive.Viewport>\r\n    </ToastPrimitive.Provider>\r\n  );\r\n}\r\n\r\nfunction Toast({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ToastPrimitive.Root>) {\r\n  return (\r\n    <ToastPrimitive.Root\r\n      data-slot=\"toast\"\r\n      className={cn(\r\n        \"bg-secondary absolute right-0 bottom-0 left-auto z-[calc(1000-var(--toast-index))] mr-0 w-[300px] [transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)+calc(var(--toast-index)*-15px)))_scale(calc(1-(var(--toast-index)*0.1)))] rounded-lg border bg-clip-padding p-4 shadow-lg transition-[opacity,transform] duration-500 ease-[cubic-bezier(0.22,1,0.36,1)] select-none after:absolute after:bottom-full after:left-0 after:h-[calc(var(--gap)+1px)] after:w-full after:content-[''] data-[ending-style]:opacity-0 data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-offset-y)*-1+calc(var(--toast-index)*var(--gap)*-1)+var(--toast-swipe-movement-y)))] data-[starting-style]:[transform:translateY(150%)] data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[ending-style]:[&:not([data-limited])]:[transform:translateY(150%)]\",\r\n        className\r\n      )}\r\n      style={{\r\n        [\"--gap\" as string]: \"1rem\",\r\n        [\"--offset-y\" as string]:\r\n          \"calc(var(--toast-offset-y) * -1 + (var(--toast-index) * var(--gap) * -1) + var(--toast-swipe-movement-y))\",\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ToastTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ToastPrimitive.Title>) {\r\n  return (\r\n    <ToastPrimitive.Title\r\n      data-slot=\"toast-title\"\r\n      className={cn(\"text-base font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ToastDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ToastPrimitive.Description>) {\r\n  return (\r\n    <ToastPrimitive.Description\r\n      data-slot=\"toast-description\"\r\n      className={cn(\"text-sm opacity-90\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ToastClose({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ToastPrimitive.Close>) {\r\n  return (\r\n    <ToastPrimitive.Close\r\n      data-slot=\"toast-close\"\r\n      className={cn(\r\n        \"ring-offset-background focus:ring-ring absolute top-2 right-2 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <XIcon className=\"size-3\" />\r\n    </ToastPrimitive.Close>\r\n  );\r\n}\r\n\r\nexport {\r\n  ToastProvider,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  useToastManager,\r\n  toastManager,\r\n};\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}