{
  "name": "toast",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "registryDependencies": [
    "https://eo-n.vercel.app/r/button"
  ],
  "files": [
    {
      "path": "ui/toast.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Toast as ToastPrimitive } from \"@base-ui-components/react/toast\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport {\r\n  CircleAlert,\r\n  CircleCheck,\r\n  CircleHelp,\r\n  Loader,\r\n  TriangleAlert,\r\n  XIcon,\r\n} from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\n\r\ntype Position =\r\n  | \"top-center\"\r\n  | \"top-right\"\r\n  | \"top-left\"\r\n  | \"bottom-center\"\r\n  | \"bottom-right\"\r\n  | \"bottom-left\";\r\n\r\nconst toastManager = ToastPrimitive.createToastManager();\r\n\r\nconst useToastManager = ToastPrimitive.useToastManager;\r\n\r\ninterface ToastProviderProps\r\n  extends React.ComponentProps<typeof ToastPrimitive.Provider> {\r\n  position?: Position;\r\n  richColors?: boolean;\r\n  closeButton?: boolean;\r\n}\r\n\r\nfunction ToastProvider({\r\n  position = \"bottom-right\",\r\n  closeButton = false,\r\n  richColors = false,\r\n  children,\r\n  ...props\r\n}: ToastProviderProps) {\r\n  return (\r\n    <ToastPrimitive.Provider data-slot=\"toast-provider\" {...props}>\r\n      {children}\r\n      <ToastPrimitive.Portal data-slot=\"toast-portal\">\r\n        <ToastPrimitive.Viewport\r\n          data-slot=\"toast-viewport\"\r\n          data-position={position}\r\n          className=\"fixed z-50 w-[calc(100%-32px)] data-[position=bottom-center]:bottom-4 data-[position=bottom-center]:left-1/2 data-[position=bottom-center]:-translate-x-1/2 data-[position=bottom-left]:bottom-4 data-[position=bottom-left]:left-4 data-[position=bottom-right]:right-4 data-[position=bottom-right]:bottom-4 data-[position=top-center]:top-4 data-[position=top-center]:left-1/2 data-[position=top-center]:-translate-x-1/2 data-[position=top-left]:top-4 data-[position=top-left]:left-4 data-[position=top-right]:top-4 data-[position=top-right]:right-4 sm:w-full sm:max-w-[370px] sm:data-[position=bottom-center]:bottom-8 sm:data-[position=bottom-left]:bottom-8 sm:data-[position=bottom-left]:left-8 sm:data-[position=bottom-right]:right-8 sm:data-[position=bottom-right]:bottom-8 sm:data-[position=top-center]:top-8 sm:data-[position=top-left]:top-8 sm:data-[position=top-left]:left-8 sm:data-[position=top-right]:top-8 sm:data-[position=top-right]:right-8\"\r\n        >\r\n          <ToastLists\r\n            position={position}\r\n            closeButton={closeButton}\r\n            richColors={richColors}\r\n          />\r\n        </ToastPrimitive.Viewport>\r\n      </ToastPrimitive.Portal>\r\n    </ToastPrimitive.Provider>\r\n  );\r\n}\r\n\r\nconst toastVariants = cva(\r\n  \"group absolute z-[calc(1000-var(--toast-index))] mr-0 grid w-full [transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)+calc(var(--toast-index)*var(--translate-y))))_scale(calc(1-(var(--toast-index)*0.07)))] grid-cols-1 rounded-lg border px-3.5 py-4 shadow-lg transition-all [transition-property:opacity,transform,bottom,top] duration-450 ease-out select-none after:absolute after:bottom-full after:left-0 after:h-[calc(1rem+1px)] after:w-full after:content-[''] has-data-[slot=toast-action]:grid-cols-[1fr_auto] data-[ending-style]:opacity-0 data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-offset-y)*var(--invert)+calc(var(--toast-index)*1rem*var(--invert))+var(--toast-swipe-movement-y)))] data-[limited]:opacity-0 data-[starting-style]:[transform:translateY(var(--starting-style))] data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[ending-style]:[&:not([data-limited])]:[transform:translateY(150%)] [&>*]:transition-opacity [&>*]:duration-450 [&>*]:ease-out not-data-[expanded]:[&>*]:opacity-[calc(1-var(--toast-index))]\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-popover text-popover-foreground border-border\",\r\n        loading: \"bg-popover text-popover-foreground border-border\",\r\n        success:\r\n          \"data-[rich-colors=true]:border-green-200 data-[rich-colors=true]:bg-green-100 data-[rich-colors=true]:text-green-800 dark:data-[rich-colors=true]:border-green-900/40 dark:data-[rich-colors=true]:bg-green-950 dark:data-[rich-colors=true]:text-green-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-green-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-green-950\",\r\n        error:\r\n          \"data-[rich-colors=true]:border-red-200 data-[rich-colors=true]:bg-red-100 data-[rich-colors=true]:text-red-800 dark:data-[rich-colors=true]:border-red-900/40 dark:data-[rich-colors=true]:bg-red-950 dark:data-[rich-colors=true]:text-red-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-red-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-red-950\",\r\n        warning:\r\n          \"data-[rich-colors=true]:border-amber-200 data-[rich-colors=true]:bg-amber-100 data-[rich-colors=true]:text-amber-800 dark:data-[rich-colors=true]:border-amber-900/40 dark:data-[rich-colors=true]:bg-amber-950 dark:data-[rich-colors=true]:text-amber-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-amber-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-amber-950\",\r\n        info: \"data-[rich-colors=true]:border-blue-200 data-[rich-colors=true]:bg-blue-100 data-[rich-colors=true]:text-blue-800 dark:data-[rich-colors=true]:border-blue-900/40 dark:data-[rich-colors=true]:bg-blue-950 dark:data-[rich-colors=true]:text-blue-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-blue-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-blue-950\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport type ToastVariants = VariantProps<typeof toastVariants>;\r\n\r\nexport type ToastType = \"loading\" | \"success\" | \"error\" | \"warning\" | \"info\";\r\n\r\ninterface ToastListsProps {\r\n  position: Position;\r\n  richColors: boolean;\r\n  closeButton?: boolean;\r\n}\r\n\r\nfunction ToastLists({ position, richColors, closeButton }: ToastListsProps) {\r\n  const { toasts } = useToastManager();\r\n\r\n  const swipeDirectionMap: Record<\r\n    Position,\r\n    NonNullable<ToastPrimitive.Root.Props[\"swipeDirection\"]>\r\n  > = {\r\n    \"bottom-center\": \"down\",\r\n    \"bottom-left\": [\"down\", \"left\"],\r\n    \"bottom-right\": [\"down\", \"right\"],\r\n    \"top-center\": \"up\",\r\n    \"top-left\": [\"up\", \"left\"],\r\n    \"top-right\": [\"up\", \"right\"],\r\n  };\r\n\r\n  const swipeDirection = swipeDirectionMap[position] ?? [\"down\", \"right\"];\r\n\r\n  const icons: Record<ToastType, React.ReactNode> = {\r\n    loading: <Loader className=\"animate-spin\" />,\r\n    success: <CircleCheck />,\r\n    error: <CircleAlert />,\r\n    warning: <TriangleAlert />,\r\n    info: <CircleHelp />,\r\n  };\r\n\r\n  return toasts.map((toast, i) => (\r\n    <ToastPrimitive.Root\r\n      key={toast.id}\r\n      data-slot=\"toast\"\r\n      data-rich-colors={richColors}\r\n      toast={toast}\r\n      swipeDirection={swipeDirection}\r\n      className={cn(\r\n        toastVariants({ variant: toast.type as ToastVariants[\"variant\"] }),\r\n        position.startsWith(\"bottom\")\r\n          ? \"bottom-0 data-[expanded]:bottom-2.5\"\r\n          : \"top-0 data-[expanded]:top-2.5\"\r\n      )}\r\n      style={\r\n        {\r\n          \"--gap\": \"1rem\",\r\n          \"--translate-y\": position.startsWith(\"bottom\") ? \"-15px\" : \"15px\",\r\n          \"--starting-style\": position.startsWith(\"bottom\") ? \"150%\" : \"-150%\",\r\n          \"--invert\": position.startsWith(\"bottom\") ? \"-1\" : \"1\",\r\n          \"--offset-y\":\r\n            \"calc(var(--toast-offset-y) * -1 + (var(--toast-index) * 1rem * -1) + var(--toast-swipe-movement-y))\",\r\n        } as React.CSSProperties\r\n      }\r\n    >\r\n      {closeButton && (\r\n        <ToastPrimitive.Close\r\n          data-slot=\"toast-close\"\r\n          className={cn(\r\n            \"ring-offset-background focus:ring-ring bg-background absolute -top-2 -left-2 rounded-full border p-[2px] opacity-70 transition-opacity hover:opacity-100 focus:ring-1 focus:ring-offset-1 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-[14px]\",\r\n            {\r\n              \"opacity-0 transition-opacity duration-300 ease-out group-data-[expanded]:opacity-100\":\r\n                i > 0,\r\n            }\r\n          )}\r\n          aria-label=\"Close\"\r\n        >\r\n          <XIcon />\r\n          <span className=\"sr-only\">Close</span>\r\n        </ToastPrimitive.Close>\r\n      )}\r\n      <div className=\"flex items-center space-x-2.5 [&>svg]:size-4.5 [&>svg]:shrink-0\">\r\n        {toast.type && toast.type ? icons[toast.type as ToastType] : null}\r\n        <div className=\"flex flex-col\">\r\n          <ToastPrimitive.Title\r\n            data-slot=\"toast-title\"\r\n            className=\"text-sm font-medium tracking-tight\"\r\n          />\r\n          <ToastPrimitive.Description\r\n            data-slot=\"toast-description\"\r\n            className=\"text-muted-foreground text-sm font-normal\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex items-center justify-between\">\r\n        <ToastPrimitive.Action\r\n          data-slot=\"toast-action\"\r\n          render={<Button size=\"sm\" />}\r\n        />\r\n      </div>\r\n    </ToastPrimitive.Root>\r\n  ));\r\n}\r\n\r\nexport { ToastProvider, useToastManager, toastManager };\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}