{
  "name": "switch",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/switch.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Switch as SwitchPrimitive } from \"@base-ui-components/react/switch\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst switchVariants = cva(\n  \"peer bg-muted data-[checked]:bg-primary focus-visible:ring-border focus-visible:outline-primary/30 inline-flex  items-center border px-0.5 transition-colors duration-150 focus-visible:ring-4 focus-visible:outline-[1px] disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"rounded-full\",\n        square: \"rounded-sm\",\n      },\n      size: {\n        default: \"h-6.5 w-10\",\n        sm: \"h-5.5 w-8\",\n        lg: \"h-7.5 w-12\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport type SwitchVariants = VariantProps<typeof switchVariants>;\n\nexport interface SwitchProps\n  extends React.ComponentProps<typeof SwitchPrimitive.Root>,\n    SwitchVariants {}\n\nfunction Switch({ className, variant, size, ...props }: SwitchProps) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(switchVariants({ variant, size, className }))}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        className={cn(\n          \"bg-background data-[checked]:bg-primary-foreground size-5 rounded-full shadow-lg transition-transform duration-150 ease-in-out data-[checked]:translate-x-3.5\",\n          size === \"sm\" && \"size-4 data-[checked]:translate-x-2.5\",\n          size === \"lg\" && \"size-6 data-[checked]:translate-x-4.5\",\n          variant === \"square\" && \"rounded\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n}\n\nexport { Switch, switchVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}