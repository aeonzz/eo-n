{
  "name": "checkbox-group-nested-parent",
  "type": "registry:example",
  "registryDependencies": [
    "checkbox-group"
  ],
  "files": [
    {
      "path": "examples/checkbox-group-nested-parent.tsx",
      "content": "import * as React from \"react\";\r\n\r\nimport { Checkbox } from \"@/registry/default/ui/checkbox\";\r\nimport { CheckboxGroup } from \"@/registry/default/ui/checkbox-group\";\r\nimport { Label } from \"@/registry/default/ui/label\";\r\n\r\nconst mainPermissions = [\"view-dashboard\", \"access-reports\", \"manage-users\"];\r\nconst userManagementPermissions = [\r\n  \"create-user\",\r\n  \"edit-user\",\r\n  \"delete-user\",\r\n  \"assign-roles\",\r\n];\r\n\r\nexport default function CheckboxGroupNestedParent() {\r\n  const [mainValue, setMainValue] = React.useState<string[]>([]);\r\n  const [managementValue, setManagementValue] = React.useState<string[]>([]);\r\n\r\n  return (\r\n    <CheckboxGroup\r\n      aria-labelledby=\"permissions\"\r\n      value={mainValue}\r\n      onValueChange={(value) => {\r\n        if (value.includes(\"manage-users\")) {\r\n          setManagementValue(userManagementPermissions);\r\n        } else if (\r\n          managementValue.length === userManagementPermissions.length\r\n        ) {\r\n          setManagementValue([]);\r\n        }\r\n        setMainValue(value);\r\n      }}\r\n      allValues={mainPermissions}\r\n    >\r\n      <Label id=\"permissions\" className=\"flex items-center space-x-2\">\r\n        <Checkbox name=\"permissions\" parent />\r\n        User Permissions\r\n      </Label>\r\n      {mainPermissions\r\n        .filter((permission) => permission !== \"manage-user\")\r\n        .map((permission, i) => (\r\n          <Label\r\n            key={i}\r\n            id={permission}\r\n            className=\"flex items-center space-x-2\"\r\n          >\r\n            <Checkbox name={permission} />\r\n            {permission}\r\n          </Label>\r\n        ))}\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}