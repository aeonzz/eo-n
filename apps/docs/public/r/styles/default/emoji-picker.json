{
  "name": "emoji-picker",
  "type": "registry:ui",
  "dependencies": [
    "frimousse"
  ],
  "files": [
    {
      "path": "ui/emoji-picker.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  EmojiPicker as EmojiPickerPrimitive,\r\n  type EmojiPickerListCategoryHeaderProps,\r\n  type EmojiPickerListEmojiProps,\r\n  type EmojiPickerListProps,\r\n  type EmojiPickerListRowProps,\r\n  type EmojiPickerRootProps,\r\n  type EmojiPickerSearchProps,\r\n  type EmojiPickerSkinToneProps,\r\n  type EmojiPickerSkinToneSelectorProps,\r\n  type EmojiPickerViewportProps,\r\n} from \"frimousse\";\r\nimport { LoaderIcon, SearchIcon } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { buttonVariants } from \"@/registry/default/ui/button\";\r\n\r\nfunction EmojiPicker({\r\n  className,\r\n  style,\r\n  columns,\r\n  ...props\r\n}: EmojiPickerRootProps) {\r\n  return (\r\n    <EmojiPickerPrimitive.Root\r\n      data-slot=\"emoji-picker\"\r\n      columns={columns}\r\n      className={cn(\r\n        \"bg-card text-card-foreground isolate flex h-[368px] w-fit flex-col gap-1 overflow-hidden rounded-lg border p-2 group-[[data-slot=popover-content]]:border-none group-[[data-slot=popover-content]]:bg-transparent\",\r\n        className\r\n      )}\r\n      style={\r\n        {\r\n          \"--columns\": `${columns}`,\r\n          ...style,\r\n        } as React.CSSProperties\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction EmojiPickerSearch({ className, ...props }: EmojiPickerSearchProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"emoji-picker-search-wrapper\"\r\n      className=\"dark:bg-input/30 border-input relative z-10 flex h-9 w-full min-w-0 flex-none items-center gap-2 rounded-md border bg-transparent py-1 pr-2.5 pl-7.5 transition-[color,box-shadow]\"\r\n    >\r\n      <SearchIcon className=\"text-muted-foreground pointer-events-none absolute top-1/2 left-2 size-4 shrink-0 -translate-y-1/2\" />\r\n      <EmojiPickerPrimitive.Search\r\n        data-slot=\"emoji-picker-search\"\r\n        className={cn(\r\n          \"placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground focusable size-full appearance-none text-base outline-none disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerContent({\r\n  className,\r\n  children,\r\n  ...props\r\n}: EmojiPickerViewportProps) {\r\n  return (\r\n    <EmojiPickerPrimitive.Viewport\r\n      data-slot=\"emoji-picker-content\"\r\n      className={cn(\"relative flex-1 outline-hidden\", className)}\r\n      {...props}\r\n    >\r\n      <EmojiPickerPrimitive.Loading\r\n        data-slot=\"emoji-picker-loading\"\r\n        className=\"text-muted-foreground absolute inset-0 flex items-center justify-center\"\r\n      >\r\n        <LoaderIcon className=\"pointer-events-none size-4 shrink-0 animate-spin\" />\r\n      </EmojiPickerPrimitive.Loading>\r\n      <EmojiPickerPrimitive.Empty\r\n        data-slot=\"emoji-picker-empty\"\r\n        className=\"text-muted-foreground absolute inset-0 flex items-center justify-center text-sm\"\r\n      >\r\n        No emojis found\r\n      </EmojiPickerPrimitive.Empty>\r\n      {children}\r\n      <EmojiPickerList />\r\n    </EmojiPickerPrimitive.Viewport>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerList({\r\n  className,\r\n  children,\r\n  ...props\r\n}: EmojiPickerListProps) {\r\n  return (\r\n    <EmojiPickerPrimitive.List\r\n      data-slot=\"emoji-picker-list\"\r\n      className={cn(\"w-fit pb-1.5 select-none\", className)}\r\n      components={{\r\n        CategoryHeader: EmojiPickerCategoryHeader,\r\n        Row: EmojiPickerRow,\r\n        Emoji: EmojiPickerEmoji,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </EmojiPickerPrimitive.List>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerSkinToneSelector({\r\n  className,\r\n  emoji = \"ðŸ‘‹\",\r\n  ...props\r\n}: EmojiPickerSkinToneSelectorProps) {\r\n  return (\r\n    <EmojiPickerPrimitive.SkinToneSelector\r\n      data-slot=\"emoji-picker-skin-tone-selector\"\r\n      className={cn(\r\n        buttonVariants({\r\n          variant: \"outline\",\r\n          size: \"icon\",\r\n          className: \"text-lg\",\r\n        }),\r\n        className\r\n      )}\r\n      title=\"Change skin tone\"\r\n      emoji={emoji}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction EmojiPickerCategoryHeader({\r\n  category,\r\n  className,\r\n  ...props\r\n}: EmojiPickerListCategoryHeaderProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"emoji-picker-category-header\"\r\n      className={cn(\r\n        \"bg-card text-muted-foreground p-1 text-xs font-medium\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {category.label}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerRow({\r\n  children,\r\n  className,\r\n  ...props\r\n}: EmojiPickerListRowProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"emoji-picker-row\"\r\n      className={cn(\"scroll-my-[2vw] sm:scroll-my-1.5\", className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerEmoji({\r\n  emoji,\r\n  className,\r\n  ...props\r\n}: EmojiPickerListEmojiProps) {\r\n  return (\r\n    <button\r\n      data-slot=\"emoji-picker-emoji\"\r\n      className={cn(\r\n        \"data-[active]:bg-muted/80 data-[active]:border-border relative flex aspect-square max-w-[calc(100%/var(--frimousse-list-columns))] min-w-8 flex-1 items-center justify-center overflow-hidden rounded-md text-base whitespace-nowrap transition-colors duration-200 ease-out data-[active]:border sm:flex-none sm:text-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {emoji.emoji}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerFooter({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"emoji-picker-footer\"\r\n      className={cn(\r\n        \"before:bg-border relative z-10 hidden min-h-11 w-full min-w-0 flex-none items-center gap-1 py-2 pb-0 before:absolute before:-inset-x-2 before:top-0 before:h-px before:w-[calc(100%_+_16px)] before:content-[''] sm:flex\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <EmojiPickerPrimitive.ActiveEmoji>\r\n        {({ emoji }) =>\r\n          emoji ? (\r\n            <>\r\n              <div className=\"flex size-8 flex-none items-center justify-center text-xl\">\r\n                {emoji.emoji}\r\n              </div>\r\n              <span className=\"text-card-foreground truncate text-xs font-medium\">\r\n                {emoji.label}\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <span className=\"text-muted-foreground ml-2 truncate text-xs font-medium\">\r\n              Select an emojiâ€¦\r\n            </span>\r\n          )\r\n        }\r\n      </EmojiPickerPrimitive.ActiveEmoji>\r\n      <div className=\"ml-auto flex gap-1\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EmojiPickerSkinTone({\r\n  emoji = \"ðŸ‘‹\",\r\n  className,\r\n  children,\r\n  ...props\r\n}: Omit<EmojiPickerSkinToneProps, \"children\"> & React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"emoji-picker-skin-tone\"\r\n      className={cn(\"bg-card flex items-center rounded-md\", className)}\r\n    >\r\n      <EmojiPickerPrimitive.SkinTone emoji={emoji} {...props}>\r\n        {({ setSkinTone, skinToneVariations, skinTone: activeSkinTone }) =>\r\n          skinToneVariations.map(({ skinTone, emoji }) => (\r\n            <button\r\n              key={skinTone}\r\n              onClick={() => setSkinTone(skinTone)}\r\n              className={cn(\r\n                buttonVariants({\r\n                  variant: \"ghost\",\r\n                  size: \"icon\",\r\n                  className: \"text-lg\",\r\n                }),\r\n                skinTone === activeSkinTone && \"bg-accent border\"\r\n              )}\r\n            >\r\n              {emoji}\r\n            </button>\r\n          ))\r\n        }\r\n      </EmojiPickerPrimitive.SkinTone>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {\r\n  EmojiPicker,\r\n  EmojiPickerSearch,\r\n  EmojiPickerContent,\r\n  EmojiPickerList,\r\n  EmojiPickerSkinToneSelector,\r\n  EmojiPickerFooter,\r\n  EmojiPickerSkinTone,\r\n};\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}