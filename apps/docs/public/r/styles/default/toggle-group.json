{
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/toggle-group.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ToggleGroup as ToggleGroupRoot } from \"@base-ui-components/react/toggle-group\";\r\nimport { type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Toggle, toggleVariants } from \"@/registry/default/ui/toggle\";\r\n\r\nconst ToggleGroupContext = React.createContext<\r\n  VariantProps<typeof toggleVariants>\r\n>({\r\n  size: \"default\",\r\n  variant: \"default\",\r\n});\r\n\r\nfunction ToggleGroup({\r\n  className,\r\n  size,\r\n  variant,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof ToggleGroupRoot> &\r\n  VariantProps<typeof toggleVariants>) {\r\n  const contextValue = React.useMemo(\r\n    () => ({\r\n      size: size ?? \"default\",\r\n      variant: variant ?? \"default\",\r\n    }),\r\n    [size, variant]\r\n  );\r\n\r\n  return (\r\n    <ToggleGroupRoot\r\n      data-slot=\"toggle-group\"\r\n      className={cn(\r\n        \"flex items-center justify-center gap-1 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ToggleGroupContext.Provider value={contextValue}>\r\n        {children}\r\n      </ToggleGroupContext.Provider>\r\n    </ToggleGroupRoot>\r\n  );\r\n}\r\n\r\nfunction ToggleGroupItem({\r\n  className,\r\n  variant,\r\n  size,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof Toggle>) {\r\n  const context = React.useContext(ToggleGroupContext);\r\n  return (\r\n    <Toggle\r\n      className={cn(\r\n        toggleVariants({\r\n          variant: context.variant || variant,\r\n          size: context.size || size,\r\n        }),\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Toggle>\r\n  );\r\n}\r\n\r\nexport { ToggleGroup, ToggleGroupItem };\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/toggle.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Toggle as ToggleRoot } from \"@base-ui-components/react/toggle\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst toggleVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[pressed]:bg-accent data-[pressed]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-transparent\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 border-input dark:hover:bg-input/50\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-2 min-w-9\",\r\n        sm: \"h-8 px-1.5 min-w-8\",\r\n        lg: \"h-10 px-2.5 min-w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport type ToggleVariants = VariantProps<typeof toggleVariants>;\r\n\r\ninterface ToggleProps\r\n  extends React.ComponentProps<typeof ToggleRoot>,\r\n    ToggleVariants {}\r\n\r\nfunction Toggle({ className, variant, size, ...props }: ToggleProps) {\r\n  return (\r\n    <ToggleRoot\r\n      data-slot=\"toggle\"\r\n      className={cn(toggleVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Toggle, toggleVariants };\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}