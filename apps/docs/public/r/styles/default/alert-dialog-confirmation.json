{
  "name": "alert-dialog-confirmation",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/alert-dialog-confirmation.tsx",
      "content": "import * as React from \"react\";\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogClose,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n} from \"@/registry/default/ui/alert-dialog\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\nimport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/registry/default/ui/dialog\";\r\nimport { Textarea } from \"@/registry/default/ui/textarea\";\r\n\r\nexport default function AlertDialogConfirmation() {\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [confirmationOpen, setConfirmationOpen] = React.useState(false);\r\n  const [textareaValue, setTextareaValue] = React.useState(\"\");\r\n\r\n  function handleOpenChange(open: boolean) {\r\n    if (!open && textareaValue) {\r\n      setConfirmationOpen(true);\r\n    } else {\r\n      setTextareaValue(\"\");\r\n      setDialogOpen(open);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    setDialogOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Dialog open={dialogOpen} onOpenChange={handleOpenChange}>\r\n      <DialogTrigger render={<Button variant=\"outline\">Feedback</Button>} />\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Submit Feedback</DialogTitle>\r\n          <DialogDescription>\r\n            We’d love to hear your thoughts about the seminar. Your feedback\r\n            helps us improve future events.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-5\">\r\n          <Textarea\r\n            required\r\n            placeholder=\"What did you like or suggest improving?\"\r\n            value={textareaValue}\r\n            onChange={(event) => setTextareaValue(event.target.value)}\r\n            className=\"text-sm sm:text-base\"\r\n          />\r\n          <DialogFooter>\r\n            <DialogClose render={<Button variant=\"outline\">Cancel</Button>} />\r\n            <Button type=\"submit\">Submit Feedback</Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n      <AlertDialog open={confirmationOpen} onOpenChange={setConfirmationOpen}>\r\n        <AlertDialogContent className=\"flex w-[360px] flex-col items-center\">\r\n          <AlertDialogTitle>Discard Feedback?</AlertDialogTitle>\r\n          <AlertDialogDescription className=\"text-center\">\r\n            You’ve started writing feedback. If you close now, your message will\r\n            be lost. Are you sure you want to discard it?\r\n          </AlertDialogDescription>\r\n          <AlertDialogFooter className=\"w-full\">\r\n            <AlertDialogClose className=\"flex-1\">\r\n              Continue Editing\r\n            </AlertDialogClose>\r\n            <Button\r\n              variant=\"destructive\"\r\n              className=\"flex-1\"\r\n              onClick={() => {\r\n                setConfirmationOpen(false);\r\n                setDialogOpen(false);\r\n                setTextareaValue(\"\");\r\n              }}\r\n            >\r\n              Discard Feedback\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </Dialog>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}